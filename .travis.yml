# TemplateCIConfig { bench: BenchEntry(MatrixEntry { run: false, version: "nightly", install_commandline: None, commandline: "cargo bench" }), clippy: ClippyEntry(MatrixEntry { run: true, version: "stable", install_commandline: Some("rustup component add clippy"), commandline: "cargo clippy -- -D warnings" }), rustfmt: RustfmtEntry(MatrixEntry { run: true, version: "stable", install_commandline: Some("rustup component add rustfmt"), commandline: "cargo fmt -v -- --check" }), additional_matrix_entries: {}, cache: "cargo", os: "linux", dist: "xenial", versions: ["stable", "nightly"], test_commandline: "cargo test --verbose --all", scheduled_test_branches: ["master"], test_schedule: "0 0 * * 0" }
os:
  - "linux"
dist: "xenial"

language: rust
sudo: required
cache: cargo

rust:
  - stable
  - nightly

env:
  global:
    - RUN_TEST=true
    - RUN_CLIPPY=false
    - RUN_BENCH=false

matrix:
  fast_finish: true
  include:
    - &rustfmt_build
      rust: "stable"
      env:
        - RUN_RUSTFMT=true
        - RUN_TEST=false
    - &clippy_build
      rust: "stable"
      env:
        - RUN_CLIPPY=true
        - RUN_TEST=false

before_script:
  - bash -c 'if [[ "$RUN_RUSTFMT" == "true" ]]; then
      rustup component add rustfmt
      ;
    fi'
  - bash -c 'if [[ "$RUN_CLIPPY" == "true" ]]; then
      rustup component add clippy
      ;
    fi'

script:
  - bash -c 'if [[ "$RUN_TEST" == "true" ]]; then
      export CI_RUST_VERSION="$TRAVIS_RUST_VERSION"
      cargo test --verbose --all
      ;
    fi'
  - bash -c 'if [[ "$RUN_RUSTFMT" == "true" ]]; then
      cargo fmt -v -- --check
      ;
    fi'
  - bash -c 'if [[ "$RUN_CLIPPY" == "true" ]]; then
      cargo clippy -- -D warnings
      ;
    fi'

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master
    - trying
    - staging

notifications:
  email:
    on_success: never
